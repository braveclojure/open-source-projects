{:project/name "mount",
 :project/tagline "managing Clojure/Script application state",
 :project/repo-url "https://github.com/tolitius/mount",
 :project/home-page-url
 "https://github.com/tolitius/mount/blob/master/README.md",
 :project/description
 "Mount aims to preserve all the Clojure/Script superpowers while managing dependencies between stateful components and making the application state enjoyably reloadable.\n\nThere is another Clojure superpower that mount is made to retain: Clojure community. Pull request away, let's solve this thing!\n\nDeveloping the project locally: \n\n* git clone git@github.com:tolitius/mount.git\n*  cd mount\n*  boot repl OR lein repl\n*  when in REPL type (dev) to get all the dependencies and dev niceties setup for you.\n\n## Running tests\n\n* boot test test-cljs OR lein do test, doo phantom test once\n\nthere is a circle ci [build status](https://circleci.com/gh/tolitius/mount)\n\n\nany questions or feedback, tell us about it on #mount clojurians slack, or just open a github issue",
 :record/tags "state, lificycle, dependency injection"}
